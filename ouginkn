import pygame
import random

# Инициализация Pygame
pygame.init()

# Настройки экрана
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Ping Pong с текстурами")

# Загрузка текстур
try:
    background = pygame.image.load('cnjk.webp').convert()
    background = pygame.transform.scale(background, (WIDTH, HEIGHT))
    
    paddle_texture = pygame.image.load('hfrtnrf.webp').convert_alpha()
    paddle_texture = pygame.transform.scale(paddle_texture, (15, 100))
except pygame.error as e:
    print(f"Ошибка загрузки текстур: {e}")
    print("Использую стандартные цвета")
    background = None
    paddle_texture = None

# Цвета
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

# Игровые объекты
PADDLE_WIDTH, PADDLE_HEIGHT = 15, 100
BALL_SIZE = 15

player1 = pygame.Rect(50, HEIGHT//2 - PADDLE_HEIGHT//2, PADDLE_WIDTH, PADDLE_HEIGHT)
player2 = pygame.Rect(WIDTH - 50 - PADDLE_WIDTH, HEIGHT//2 - PADDLE_HEIGHT//2, PADDLE_WIDTH, PADDLE_HEIGHT)
ball = pygame.Rect(WIDTH//2 - BALL_SIZE//2, HEIGHT//2 - BALL_SIZE//2, BALL_SIZE, BALL_SIZE)

# Скорости
player1_speed = 0
player2_speed = 0
ball_speed_x = 7 * random.choice((1, -1))
ball_speed_y = 7 * random.choice((1, -1))

# Счет
score1 = 0
score2 = 0
font = pygame.font.Font(None, 36)

def reset_ball():
    ball.center = (WIDTH//2, HEIGHT//2)
    return 7 * random.choice((1, -1)), 7 * random.choice((1, -1))

def draw_objects():
    # Рисуем фон
    if background:
        screen.blit(background, (0, 0))
    else:
        screen.fill(BLACK)
    
    # Рисуем ракетки
    if paddle_texture:
        screen.blit(paddle_texture, player1)
        screen.blit(pygame.transform.flip(paddle_texture, True, False), player2)
    else:
        pygame.draw.rect(screen, WHITE, player1)
        pygame.draw.rect(screen, WHITE, player2)
    
    # Рисуем мяч и разделительную линию
    pygame.draw.ellipse(screen, BLACK, ball)
    pygame.draw.aaline(screen, BLACK, (WIDTH//2, 0), (WIDTH//2, HEIGHT))
    
    # Отображаем счет
    score_text = font.render(f"{score1} : {score2}", True, BLACK)
    screen.blit(score_text, (WIDTH//2 - 30, 20))

# Игровой цикл
clock = pygame.time.Clock()
running = True

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        
        # Управление
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_w:
                player1_speed = -7
            if event.key == pygame.K_s:
                player1_speed = 7
            if event.key == pygame.K_UP:
                player2_speed = -7
            if event.key == pygame.K_DOWN:
                player2_speed = 7
        
        if event.type == pygame.KEYUP:
            if event.key == pygame.K_w or event.key == pygame.K_s:
                player1_speed = 0
            if event.key == pygame.K_UP or event.key == pygame.K_DOWN:
                player2_speed = 0
    
    # Движение платформ
    player1.y += player1_speed
    player2.y += player2_speed
    
    # Границы для платформ
    player1.y = max(0, min(player1.y, HEIGHT - PADDLE_HEIGHT))
    player2.y = max(0, min(player2.y, HEIGHT - PADDLE_HEIGHT))
    
    # Движение мяча
    ball.x += ball_speed_x
    ball.y += ball_speed_y
    
    # Отскок от стен
    if ball.top <= 0 or ball.bottom >= HEIGHT:
        ball_speed_y *= -1
    
    # Отскок от платформ
    if ball.colliderect(player1) or ball.colliderect(player2):
        ball_speed_x *= -1
        # Добавляем случайный угол после удара
        ball_speed_y = random.choice([-6, -5, -4, 4, 5, 6])
    
    # Подсчет очков
    if ball.left <= 0:
        score2 += 1
        ball_speed_x, ball_speed_y = reset_ball()
    
    if ball.right >= WIDTH:
        score1 += 1
        ball_speed_x, ball_speed_y = reset_ball()
    
    # Отрисовка
    draw_objects()
    
    pygame.display.flip()
    clock.tick(60)

pygame.quit()
